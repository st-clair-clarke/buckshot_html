<!--
grid Demo

grid is a very dynamic layout container.  It supports 3 different column/row
measurement types:
   - Pixel. Row or column is a fixed value in pixels.
   - Star. Takes up a weighted size of available space relative to other
     star-type peers.
   - Auto. Attempts to size to the largest element in the row or column

In this demo, the first row is and "auto" type, and the textblock is using a
grid.columnspan attached property to span across all 4 columns.

The remaining rows are laid out equally spaced with "*" (star-type).

The columns are more interesting.  Notice how the first column is
automatically the size of the largest text element.

For the next 2 columns, notice how the "*2" column is exactly twice as big as the
"*1" column.  Change the width of the grid to see how this adjusts automatically.

The fourth column is pixel-type of 100, and remains fixed in place.
-->
<template xmlns='http://buckshotui.org/platforms/html'>
<stack>
  <resourcecollection>
     <lineargradientbrush direction="vertical" key="gridbg" fallbackcolor="PowderBlue">
       <stops>
         <gradientstop color="White"></gradientstop>
         <gradientstop color="Orange"></gradientstop>
       </stops>
     </lineargradientbrush>

     <styletemplate key='borderCell'>
        <setters>
           <setter property='borderColor' value='Black' />
           <setter property='borderThickness' value='1' />
           <setter property='hAlign' value='stretch' />
           <setter property='vAlign' value='stretch' />
        </setters>
     </styletemplate>
  </resourcecollection>
  <grid margin='10' width='400' height='400' background="{resource gridbg}">
    <columndefinitions>
      <columndefinition width="auto"></columndefinition>
      <columndefinition width="*1"></columndefinition>
      <columndefinition width="*2"></columndefinition>
      <columndefinition width="100"></columndefinition>
    </columndefinitions>
    <rowdefinitions>
      <rowdefinition height="auto"></rowdefinition>
      <rowdefinition height="*"></rowdefinition>
      <rowdefinition height="*"></rowdefinition>
      <rowdefinition height="*"></rowdefinition>
    </rowdefinitions>

    <textblock text="Grid Demo" grid.columnspan="4" halign="center"/>

    <border grid.row="1" style='{resource borderCell}'>
      <textblock style='{resource defaultText}'>auto</textblock>
    </border>
    <border grid.row="1" grid.column="1" style='{resource borderCell}'>
      <textblock style='{resource defaultText}'>*1</textblock>
    </border>
    <border grid.row="1" grid.column="2" style='{resource borderCell}'>
      <textblock style='{resource defaultText}'>*2</textblock>
    </border>
    <border grid.row="1" grid.column="3" style='{resource borderCell}'>
      <textblock style='{resource defaultText}'>pixel 100</textblock>
    </border>

    <border grid.row="2" borderthickness="1" bordercolor="Black" valign='stretch'>
      <textblock style='{resource defaultText}'>auto column</textblock>
    </border>
    <border grid.row="2" grid.column="1" style='{resource borderCell}'>
      <textblock style='{resource defaultText}'>*1</textblock>
    </border>
    <border grid.row="2" grid.column="2" style='{resource borderCell}'>
      <textblock style='{resource defaultText}'>*2</textblock>
    </border>
    <border grid.row="2" grid.column="3" style='{resource borderCell}'>
      <textblock style='{resource defaultText}'>pixel 100</textblock>
    </border>

    <border grid.row="3" style='{resource borderCell}'>
      <textblock style='{resource defaultText}'>auto</textblock>
    </border>
    <border grid.row="3" grid.column="1" style='{resource borderCell}'>
      <textblock style='{resource defaultText}'>*1</textblock>
    </border>
    <border grid.row="3" grid.column="2" style='{resource borderCell}'>
      <textblock style='{resource defaultText}'>*2</textblock>
    </border>
    <border grid.row="3" grid.column="3" style='{resource borderCell}'>
      <textblock style='{resource defaultText}'>pixel 100</textblock>
    </border>
  </grid>
</stack>
</template>