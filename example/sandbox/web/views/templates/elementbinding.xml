<!--
This demo shows how easy it is to build a simple, but interactive
UI without having to write any code.

The controls on the left side are adjusting the properties of the
boarder in the display area.  This is accomplished through
declarative element-to-element binding.
-->

<stack>
  <textblock fontsize="24" text='This demo is written entirely with templates - no code.'/>
    <stack width="650" orientation="horizontal">
    <grid margin="5" width="210" height='400'>
      <columndefinitions>
        <columndefinition width="*1"></columndefinition>
        <columndefinition width="*2"></columndefinition>
        <columndefinition width="*.5"></columndefinition>
      </columndefinitions>
      <rowdefinitions>
        <rowdefinition height="auto"></rowdefinition>
        <rowdefinition height="auto"></rowdefinition>
        <rowdefinition height="auto"></rowdefinition>
        <rowdefinition height="auto"></rowdefinition>
        <rowdefinition height="auto"></rowdefinition>
      </rowdefinitions>

      <!-- labels -->
      <textblock text="Color:"/>
      <textblock grid.row="1" text="Width:"/>
      <textblock grid.row="2" text="Height:"/>
      <textblock grid.row="3" text="Corner:"/>

      <!-- controls -->

      <dropdownlist name="ddlColors" width="100" grid.column="1">
        <items>
          <DropDownItem item="Red" />
          <DropDownItem item="Green" />
          <DropDownItem item="Blue" />
          <DropDownItem item="LightBlue" />
          <DropDownItem item="Tan" />
          <DropDownItem item="Orange" />
          <DropDownItem item="Purple" />
          <DropDownItem item="Lime" />
          <DropDownItem item="DarkGreen" />
          <DropDownItem item="Yellow" />
        </items>
      </dropdownlist>
      <slider name="slWidth" grid.row="1" grid.column="1" min="20" max="300" value="150" width="100"></slider>
      <slider name="slHeight" grid.row="2" grid.column="1" min="20" max="300" value="150" width="100"></slider>
      <slider name="slCorner" grid.row="3" grid.column="1" min="1" max="20" value="1" width="100"></slider>

      <!-- value labels, bound to controls via element binding -->
      <textblock grid.column="2" grid.row="1" text="{element slWidth.value}"/>
      <textblock grid.column="2" grid.row="2" text="{element slHeight.value}"/>
      <textblock grid.column="2" grid.row="3" text="{element slCorner.value}"/>

      <!-- using declarative actions, we reset the values of the controls when the user clicks the button -->
      <button grid.row="4" content='Reset'>
        <actions>
          <setproperty event="click" target="slWidth" property="value" value="150"></setproperty>
          <setproperty event="click" target="slHeight" property="value" value="150"></setproperty>
          <setproperty event="click" target="slCorner" property="value" value="1"></setproperty>
        </actions>
      </button>
    </grid>
    <border margin="5" width="400" height="400" borderthickness="1" bordercolor="Black">
      <!-- this border is bound to the controls via element binding -->
      <border halign="center"
              valign="center"
              bordercolor="Black"
              width="{element slWidth.value}"
              height="{element slHeight.value}"
              background="{element ddlColors.selectedItem.item}"
              cornerradius='{element slCorner.value}'>
      </border>
    </border>
  </stack>
  <textblock margin="10,0,0,0" text="Video On How Element Binding Works:"/>
  <youtube width="300" height="250" videoid="WC25C5AHYAI"></youtube>
</stack>